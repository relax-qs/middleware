package ${managerPackage};

import com.lark.middleware.model.query.PageResult;
import ${doPackage}.${className}${doSuffix};
import ${queryPackage}.${className}${queryPrefix};

import java.util.List;


/**
 * Manager for ${className}.
 */
public interface ${className}${managerSuffix} {
    /**
     * query count by query condition.
     */
    int countBy${queryPrefix}(${className}${queryPrefix} ${queryPrefix.toLowerCase()});

    /**
     * delete by query condition.
     */
    int deleteBy${queryPrefix}(${className}${queryPrefix} ${queryPrefix.toLowerCase()});

    /**
     * delete by primary key.
     */
    int deleteByPrimaryKey(Long id);

    /**
     * insert selective.
     */
    int insertSelective(${className}${doSuffix} record);

    /**
     * select by query condition.
     */
    List<${className}${doSuffix}> selectBy${queryPrefix}(${className}${queryPrefix} ${queryPrefix.toLowerCase()});


    /**
     * select by query condition with page.
     */
    PageResult<${className}${doSuffix}> selectBy${queryPrefix}WithPage(${className}${queryPrefix} ${queryPrefix.toLowerCase()});

    /**
     * select by primary key.
     */
    ${className}${doSuffix} selectByPrimaryKey(Long id);

    /**
     * update by query condition selective.
     */
    int updateBy${queryPrefix}Selective( ${className}${doSuffix} record,  ${className}${queryPrefix} ${queryPrefix.toLowerCase()});

    /**
     * update by query condition.
     */
    int updateBy${queryPrefix}(${className}${doSuffix} record, ${className}${queryPrefix} ${queryPrefix.toLowerCase()});

    /**
     * update by primary key selective.
     */
    int updateByPrimaryKeySelective(${className}${doSuffix} record);

    /**
    * update by primary key. the column will set to null if column param is null
    */
    int updateByPrimaryKey(${className}${doSuffix} record);
}